{"remainingRequest":"E:\\Code\\lib_web\\frontend\\vue-web-frontiers\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Code\\lib_web\\frontend\\vue-web-frontiers\\src\\components\\Breadcrumb\\index.vue?vue&type=style&index=0&id=b50ef614&lang=scss&scoped=true","dependencies":[{"path":"E:\\Code\\lib_web\\frontend\\vue-web-frontiers\\src\\components\\Breadcrumb\\index.vue","mtime":1717562460545},{"path":"E:\\Code\\lib_web\\frontend\\vue-web-frontiers\\node_modules\\css-loader\\dist\\cjs.js","mtime":1717562454061},{"path":"E:\\Code\\lib_web\\frontend\\vue-web-frontiers\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1717562460125},{"path":"E:\\Code\\lib_web\\frontend\\vue-web-frontiers\\node_modules\\postcss-loader\\src\\index.js","mtime":1717562457550},{"path":"E:\\Code\\lib_web\\frontend\\vue-web-frontiers\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1717562458736},{"path":"E:\\Code\\lib_web\\frontend\\vue-web-frontiers\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1717562453392},{"path":"E:\\Code\\lib_web\\frontend\\vue-web-frontiers\\node_modules\\vue-loader\\lib\\index.js","mtime":1717562460124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXBwLWJyZWFkY3J1bWIuZWwtYnJlYWRjcnVtYiB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGZvbnQtc2l6ZTogMTRweDsKICBsaW5lLWhlaWdodDogNTBweDsKICBtYXJnaW4tbGVmdDogOHB4OwoKCgogIC5uby1yZWRpcmVjdCB7CiAgICBjb2xvcjogI2ZmZjsKICAgIGN1cnNvcjogdGV4dDsKICB9Cn0KCi5lbC1icmVhZGNydW1iX19pbm5lciB7CiAgY29sb3I6ICNmZmY7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Breadcrumb","sourcesContent":["<template>\r\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\r\n    <transition-group name=\"breadcrumb\">\r\n      <el-breadcrumb-item v-for=\"(item,index) in levelList\" :key=\"item.path\">\r\n        <span v-if=\"item.redirect==='noRedirect'||index==levelList.length-1\" class=\"no-redirect\">{{ item.meta.title\r\n          }}</span>\r\n        <a v-else @click.prevent=\"handleLink(item)\">{{ item.meta.title }}</a>\r\n      </el-breadcrumb-item>\r\n    </transition-group>\r\n  </el-breadcrumb>\r\n</template>\r\n\r\n<script>\r\n  import pathToRegexp from 'path-to-regexp'\r\n\r\n  export default {\r\n    data ()\r\n    {\r\n      return {\r\n        levelList: null\r\n      }\r\n    },\r\n    watch: {\r\n      $route ()\r\n      {\r\n        this.getBreadcrumb()\r\n      }\r\n    },\r\n    created ()\r\n    {\r\n      this.getBreadcrumb()\r\n    },\r\n    methods: {\r\n      getBreadcrumb ()\r\n      {\r\n        // only show routes with meta.title\r\n        let matched = this.$route.matched.filter(item => item.meta && item.meta.title)\r\n        const first = matched[0]\r\n\r\n        if (!this.isDashboard(first)) {\r\n          matched = [{ path: '/dashboard', meta: { title: '首页' } }].concat(matched)\r\n        }\r\n\r\n        this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\r\n      },\r\n      isDashboard (route)\r\n      {\r\n        const name = route && route.name\r\n        if (!name) {\r\n          return false\r\n        }\r\n        return name.trim().toLocaleLowerCase() === 'Dashboard'.toLocaleLowerCase()\r\n      },\r\n      pathCompile (path)\r\n      {\r\n        // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\r\n        const { params } = this.$route\r\n        var toPath = pathToRegexp.compile(path)\r\n        return toPath(params)\r\n      },\r\n      handleLink (item)\r\n      {\r\n        const { redirect, path } = item\r\n        if (redirect) {\r\n          this.$router.push(redirect)\r\n          return\r\n        }\r\n        this.$router.push(this.pathCompile(path))\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .app-breadcrumb.el-breadcrumb {\r\n    display: inline-block;\r\n    font-size: 14px;\r\n    line-height: 50px;\r\n    margin-left: 8px;\r\n\r\n\r\n\r\n    .no-redirect {\r\n      color: #fff;\r\n      cursor: text;\r\n    }\r\n  }\r\n\r\n  .el-breadcrumb__inner {\r\n    color: #fff;\r\n  }\r\n</style>"]}]}